AWSTemplateFormatVersion: '2010-09-09'

Description: Base resources for the Alerts service

Parameters:
  pBuild:
    Type: String
    Description: The build number
  pCleanBranch:
    Type: String
    Description: The clean branch, can be used in resource names
  pEnvironment:
    Type: String
    Description: The AWS environment this belongs to
  pProductComponent:
    Type: String
    Description: The product component
  pProductName:
    Type: String
    Description: The name of the product

Conditions:

  IsDev: !Equals
    - !Ref pEnvironment
    - development
  NotProd: !Not
    - !Equals
      - !Ref pEnvironment
      - production
  #IsFirstBuild: !Equals [!Ref pBuild, "1"]
  IsFirstBuild: !Equals ["1", "1"]

Resources:

  AlertsRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: !If [ NotProd, true, false ]
      EncryptionConfiguration:
        EncryptionType: AES256
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryName: !Sub
                         - alerts-${ResourceName}
                         - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      RepositoryPolicyText:
        Version: 2012-10-17
        Statement:
          - Sid: AllowPublicPull
            Effect: Allow
            Principal: '*'
            Action:
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:BatchGetImage'
              - 'ecr:BatchCheckLayerAvailability'
      Tags:
        - Key: Environment
          Value: !Ref pEnvironment
        - Key: Branch
          Value: !Ref pCleanBranch

  BiosecurityAlertsBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub 
              - ${pProductName}-${ResourceName}
              - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      LifecycleConfiguration:
        Rules:
          - Id: delete
            AbortIncompleteMultipartUpload:
               DaysAfterInitiation: 1
            Status: Enabled
          - Id: storage class transition
            Transition:
              StorageClass: INTELLIGENT_TIERING
              TransitionInDays: 7
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      Tags:
        - Key: Name
          Value: !Sub 
              - ${pProductName}-${ResourceName}
              - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
        

  AlertsSecret:
    Type: 'AWS::SecretsManager::Secret'
    Condition: IsFirstBuild
    Properties:
      Name: !Sub 
              - ${pProductName}-${ResourceName}
              - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      Description: !Sub Alerts app ${pEnvironment} secrets
      GenerateSecretString: 
        GenerateStringKey: db-password
        PasswordLength: 12
        ExcludeCharacters: "/@\" "
        SecretStringTemplate: |
          {
            "db-password": ""
          }
      SecretString: |
                {
                   "oidc_secret" : ""
                }



Outputs:

  AlertsRepositoryArn:
    Description: The ECR repository ARN for the Alerts service
    Value: !GetAtt AlertsRepository.Arn

  AlertsRepositoryName:
    Description: The ECR repository ARN for the Alerts service
    Value: !Ref AlertsRepository

  AlertsSecret:
    Description: The Secrets name for alerts 
    Value: !Sub 
            - alerts-${ResourceName}
            - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]