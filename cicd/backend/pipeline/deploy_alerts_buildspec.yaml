version: 0.2

env:
  shell: bash
  variables:
    JAVA_TOOL_OPTIONS: -Dhttps.protocols=TLSv1.2

phases:
  install:
    commands:
      - echo Installing dependencies...
      - cat /etc/lsb-release
      - apt update -y
        && apt-get -q -y install openjdk-11-jdk
        && pip3 install jinja2
        && curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        && chmod 700 get_helm.sh
        && ./get_helm.sh

  build:
    commands:
      - echo Build started on $(date)
      - aws eks --region ap-southeast-2 update-kubeconfig --name $EKS_CLUSTER_NAME
      - kubectl config set-context --current --namespace=alerts
      - echo "Creating service account for alerts..."
      - |
        ALERTS_ROLE_ARN=$(aws cloudformation describe-stacks --stack-name $BASE_STACK_NAME \
          --query "Stacks[0].Outputs[?OutputKey=='AlertsRoleArn'].OutputValue" --output text)
      - printf "$(kubectl config current-context)\n"
      - |
        eksctl create iamserviceaccount --name alerts-service-account-$CLEAN_BRANCH \
          --namespace alerts --cluster $EKS_CLUSTER_NAME --attach-role-arn $ALERTS_ROLE_ARN \
          --approve --override-existing-serviceaccounts \
          --tags "product=alerts,environment=development,branch=${CLEAN_BRANCH}"
      - echo "Service account created."
      - echo "Deploying alerts via helm..."
      - cd helm
      - |
        export CERTIFICATE_ARN=$(aws acm list-certificates --region ap-southeast-2 \
          --query "CertificateSummaryList[?DomainName=='*.$HOSTED_ZONE' && Status=='ISSUED'].CertificateArn" --output text)
      - BUILD_TAG=$CLEAN_BRANCH-$CODEBUILD_BUILD_NUMBER
      - |
        helm upgrade --install $HELM_RELEASE_NAME . -n alerts \
          --set image.repository=$ECR_REPO \
          --set image.tag=$BUILD_TAG \
          --set ingress.hostname=$DOMAIN_NAME \
          --set rds.externalName=$DB_WRITE_ENDPOINT \
          --set ingress.certificateArn=$CERTIFICATE_ARN \
          --set secret.name=alerts-config-secret-$CLEAN_BRANCH \
          --set serviceAccount.name=alerts-service-account-$CLEAN_BRANCH \
          --set rds.name=mysql-rds-$CLEAN_BRANCH \
          -f cicd/$PRODUCT_COMPONENT/values/values-$ENVIRONMENT.yaml \
          -f $CODEBUILD_SRC_DIR_ExportConfigArtifact/overrides.yaml
      - kubectl rollout restart deployment $HELM_RELEASE_NAME
  post_build:
    commands:
      - echo Post-build phase...
      - echo Build completed on $(date)

artifacts:
  base-directory: $CODEBUILD_SRC_DIR
  files:
    - '**/*'