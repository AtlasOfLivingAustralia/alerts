AWSTemplateFormatVersion: "2010-09-09"
Description: Code pipeline for the alerts repo

Parameters:
  pArtifactsBucket:
    Type: String
    Description: Common artifacts bucket used by CodePipeline and CodeBuild
  pAutoDeploy:
    Type: String
    Description: Sets the pipeline to auto deploy on repo changes
  pCleanBranch:
    Type: String
    Description: The clean branch, can be used in resource names
  pCloudFormationServiceRole:
    Type: String
    Description: Common service role used by Cloudformation
  pCodeBuildServiceRole:
    Type: String
    Description: Common service role used by CodeBuild
  pCodePipelineServiceRole:
    Type: String
    Description: Common service role used by CodePipeline
  pCodestarConnection:
    Type: String
    Description: Codestar connection ARN
  pEksClusterName:
    Type: String
    Description: The name of the EKS cluster
  pEnvironment:
    Type: String
    Description: The AWS environment this belongs to
  pGitHubBranch:
    Type: String
    Description: GitHub branch we're deploying from
  pGitHubOwner:
    Type: String
    Description: GitHub owner
  pGitHubRepositoryName:
    Type: String
    Description: GitHub repository name.
  pPipelineFingerprint:
    Type: String
    Description: The fingerprint of the pipeline, used to determine if it's been modified
  pProductName:
    Type: String
    Description: The name of the product
  pAlertsStackName:
    Type: String
    Description: The name of the alerts stack
  pRestartExecutionOnUpdate:
    Type: String
    Description: Restart that pipeline if it's been updated
    AllowedValues:
         - true 
         - false

Conditions:

  IsDev: !Equals
    - !Ref pEnvironment
    - development

Resources:
 
  ExportConfig:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub
              - ${pProductName}-export-config-${ResourceName}
              - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      Description: Load the environment and build the CloudFormation template config file
      ServiceRole: !Ref pCodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: AWS_ARTIFACTS_BUCKET
            Value: !Ref pArtifactsBucket
          - Name: CLEAN_BRANCH
            Value: !Ref pCleanBranch
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/alerts/pipeline/export_config_buildspec.yaml
      TimeoutInMinutes: 5

  BuildAlerts:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub
        - ${pProductName}-build-alerts-${ResourceName}
        - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      Description: Build the alerts project
      ServiceRole: !Ref pCodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: CLEAN_BRANCH
            Value: !Ref pCleanBranch
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/alerts/pipeline/alerts_buildspec.yml
      TimeoutInMinutes: 30

  DeployAlerts:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub
        - ${pProductName}-deploy-alerts-${ResourceName}
        - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      Description: Deploy alerts
      ServiceRole: !Ref pCodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: CLEAN_BRANCH
            Value: !Ref pCleanBranch
          - Name: EKS_CLUSTER_NAME
            Value: !Ref pEksClusterName
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/alerts/pipeline/deploy_alerts_buildspec.yml
      TimeoutInMinutes: 20

  DeployNotification:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 
              - ${pProductName}-deploy-notification-${ResourceName}
              - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      Description: Send out the deploy notifications
      ServiceRole: !Ref pCodeBuildServiceRole
      Artifacts:                           
        Type: CODEPIPELINE                 
      Environment:                         
        Type: LINUX_CONTAINER              
        ComputeType: BUILD_GENERAL1_SMALL  
        Image: aws/codebuild/standard:5.0  
        EnvironmentVariables:              
          - Name: CLEAN_BRANCH             
            Value: !Ref pCleanBranch       
      Source:                             
        Type: CODEPIPELINE
        BuildSpec: cicd/alerts/pipeline/deploy_notification_buildspec.yaml
      TimeoutInMinutes: 5

  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub
              - ${pProductName}-${ResourceName}
              - ResourceName: !If [ IsDev, !Ref pCleanBranch, !Ref pEnvironment ]
      PipelineType: V2
      RoleArn: !Ref pCodePipelineServiceRole
      ArtifactStore:
        Type: S3
        Location: !Ref pArtifactsBucket
      DisableInboundStageTransitions:
        - Reason: To prevent accidental teardown
          StageName: Teardown
      RestartExecutionOnUpdate: !Ref pRestartExecutionOnUpdate
      Triggers:
        - ProviderType: CodeStarSourceConnection
          GitConfiguration:
               Push: 
                 - Branches:
                     Excludes:
                       - !If [ IsProd, !Ref pGitHubBranch, bogo-branch ]
                   FilePaths:
                     Includes:
                       - cicd/database/**
               SourceActionName: CheckoutSrc
      Variables:
        - Name: SRC_BRANCH
          DefaultValue: !Ref pGitHubBranch
          Description: The branch this pipeline is deploying from
        - Name: PIPELINE_FINGERPRINT
          DefaultValue: !Ref pPipelineFingerprint
          Description: The fingerprint of the pipeline, used to determine if it's been modified
      Stages:
      - Name: Checkout_Source
        Actions:
          - Name: CheckoutSrc
            ActionTypeId:
              Category: Source
              Owner: AWS
              Provider: CodeStarSourceConnection
              Version: 1
            Configuration:
              ConnectionArn: !Ref pCodestarConnection
              FullRepositoryId: !Sub ${pGitHubOwner}/${pGitHubRepositoryName}
              BranchName: !Ref pGitHubBranch
              OutputArtifactFormat: CODEBUILD_CLONE_REF
              DetectChanges: !Ref pAutoDeploy
            Namespace: CheckoutSrcNS
            OutputArtifacts:
              - Name: 'SourceArtifact'
      - Name: Deploy_Infrastructure_Build
        Actions:
          - Name: ExportConfig
            ActionTypeId:
              Owner: AWS
              Category: Build
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref ExportConfig
              EnvironmentVariables: !Sub |
                 [
                   { "name":"SRC_BRANCH", "value":"${pGitHubBranch}" },
                   { "name":"COMMIT_ID", "value":"#{CheckoutSrcNS.CommitId}" },
                   { "name":"ENVIRONMENT", "value":"${pEnvironment}" },
                   { "name":"PIPELINE_FINGERPRINT", "value":"#{variables.PIPELINE_FINGERPRINT}" }
                 ]
            Namespace: ExportConfigNS
            InputArtifacts:
              - Name: 'SourceArtifact'
            OutputArtifacts:
              - Name: ExportConfigArtifact
            RunOrder: 1

          - Name: DeployAlertsCFStack
            ActionTypeId:
              Owner: AWS
              Category: Deploy
              Version: 1
              Provider: CloudFormation
            Configuration:
              TemplatePath: 'ExportConfigArtifact::cicd/alerts/app/#{ExportConfigNS.ALERTS_STACK_FILE}'
              ActionMode: !If [ IsDev, REPLACE_ON_FAILURE, CREATE_UPDATE ]
              TemplateConfiguration: 'ExportConfigArtifact::cicd/alerts/app/alerts_template_config.json'
              Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
              RoleArn: !Ref pCloudFormationServiceRole
              StackName: !Ref pAlertsStackName
            InputArtifacts:
              - Name: 'ExportConfigArtifact'
            Namespace: AlertsCloudFormationOutNS
            OutputArtifacts: [ ]
            RunOrder: 2

          - Name: RunAlertsBuildspec
            ActionTypeId:
              Owner: AWS
              Category: Build
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref BuildAlerts
              EnvironmentVariables: !Sub |
                [
                  { "name":"SRC_BRANCH", "value":"${pGitHubBranch}" },
                  { "name":"COMMIT_ID", "value":"#{CheckoutSrcNS.CommitId}" },
                  { "name":"ENVIRONMENT", "value":"${pEnvironment}" },
                  { "name":"PIPELINE_FINGERPRINT", "value":"#{variables.PIPELINE_FINGERPRINT}" }
                ]
            InputArtifacts:
              - Name: 'SourceArtifact'
            RunOrder: 3

          - Name: Approval
            ActionTypeId:
              Owner: AWS
              Category: Approval
              Version: 1
              Provider: Manual
            Configuration:
              CustomData: Approval required to deploy build to eks
            RunOrder: 4

          - Name: RunAlertsDeployBuildspec
            ActionTypeId:
              Owner: AWS
              Category: Build
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref DeployAlerts
              EnvironmentVariables: !Sub |
                [
                  { "name":"SRC_BRANCH", "value":"${pGitHubBranch}" },
                  { "name":"COMMIT_ID", "value":"#{CheckoutSrcNS.CommitId}" },
                  { "name":"ENVIRONMENT", "value":"${pEnvironment}" },
                  { "name":"PIPELINE_FINGERPRINT", "value":"#{variables.PIPELINE_FINGERPRINT}" }
                ]
            InputArtifacts:
              - Name: 'SourceArtifact'
            RunOrder: 5

          - Name: DeployNotification
            ActionTypeId:
              Owner: AWS
              Category: Build
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref DeployNotification
              EnvironmentVariables: !Sub |
                [
                  { "name":"AUTHOR", "value":"#{CheckoutSrcNS.AuthorDisplayName}" },
                  { "name":"COMMIT_ID", "value":"#{CheckoutSrcNS.CommitId}" },
                  { "name":"ENVIRONMENT", "value":"${pEnvironment}" },
                  { "name":"PRODUCT_COMPONENT", "value":"#{ExportConfigNS.PRODUCT_COMPONENT}" },
                  { "name":"PRODUCT_NAME", "value":"#{ExportConfigNS.PRODUCT_NAME}" },
                  { "name":"REPO", "value":"#{CheckoutSrcNS.FullRepositoryName}" },
                  { "name":"SLACK_ALERT_CHANNEL", "value":"#{ExportConfigNS.SLACK_ALERT_CHANNEL}" },
                  { "name":"SLACK_DEPLOY_NOTIFICATION", "value":"#{ExportConfigNS.SLACK_DEPLOY_NOTIFICATION}" },
                  { "name":"SRC_BRANCH", "value":"${pGitHubBranch}" }
                ]
            Namespace: DeployNotificationNS
            InputArtifacts:
              - Name: 'SourceArtifact'
            RunOrder: 6

      - Name: Teardown
        Actions:
          - Name: Approval
            ActionTypeId:
              Owner: AWS
              Category: Approval
              Version: 1
              Provider: Manual
            Configuration:
              CustomData: Approval required to tear down this stack
            RunOrder: 1
          - Name: ApprovalForPipelineTeardown
            ActionTypeId:
              Owner: AWS
              Category: Approval
              Version: 1
              Provider: Manual
            Configuration:
              CustomData: Approval required to tear down this stack
            RunOrder: 2
          - Name: TeardownCodePipeline
            ActionTypeId:
              Owner: AWS
              Category: Deploy
              Version: 1
              Provider: CloudFormation
            Configuration:
              ActionMode: DELETE_ONLY
              StackName: !Ref AWS::StackName
              RoleArn: !Ref pCloudFormationServiceRole
            RunOrder: 3

  ExportConfigCodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/codebuild/${ExportConfig}
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  NotificationCodeBuildLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub /aws/codebuild/${DeployNotification}
      RetentionInDays: 30
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName


Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
