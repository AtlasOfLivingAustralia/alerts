# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: "latest"

secret:
  name: "alerts-config-secret"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  port: 80
  targetPort: 8000

ingress:
  enabled: true
  className: "alb"
  certificateArn: ""
  hostname: ""
  tls: []
  accessLogsBucket: ""
  accessLogsPrefix: ""

tags:
  branch: ""
  component: ""
  environment: ""
  Name: ""
  product: ""
  version: ""

resources:
  requests:
    cpu: "1"          # 1 vCPU
    memory: "4096Mi"  # 4GB
  limits:
    cpu: "1"          # 1 vCPU
    memory: "4096Mi"  # 4GB

livenessProbe:
  enabled: true
  httpGet:
    path: /actuator/health
    port: 8000
    scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

startupProbe:
  enabled: true
  httpGet:
    path: /actuator/health
    port: 8000
    scheme: HTTP
  initialDelaySeconds: 90
  periodSeconds: 5
  timeoutSeconds: 15
  successThreshold: 1
  failureThreshold: 40 # 40 failures + initial delay of 90 seconds = 290 seconds

readinessProbe:
  enabled: true
  httpGet:
    path: /actuator/health
    port: 8000
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

rds:
  name: "mysql-rds"
  externalName: "mysql-rds"

# Config file properties
config:
  base:
    alerts_base_url: ""
    alerts_context_path: ""
  cas:
    auth_base_url: ""
    alerts_apikey_whitelist: ""
  db:
    driver_class_name: ""
    alerts_db_hostname: ""
    database_name: ""
    alerts_db_username: ""
    alerts_db_password: ""
    mysql_connection_ssl: ""
    dataSource_dbCreate: ""
  enable_myannotation: ""
  enable_specieslists_alerts: ""
  enable_spatial_alerts: ""
  enable_blogs_alerts: ""
  enable_citizen_science_alerts: ""
  external:
    biocache_url: ""
    biocache_service_url: ""
    spatial_url: ""
    collectory_url: ""
    alerts_collectory_service_url: ""
    alerts_userdetails_url: ""
    lists_url: ""
  mail:
    enabled: ""
    enable_email: ""
    mail_ses_enabled: ""
  header_and_footer_baseurl: ""
  header_and_footer_version: ""
  ala_base_url: ""
  bie_base_url: ""
  bie_search_path: ""
  alerts_skin_layout: ""
  skin_home_url: ""
  skin_orgNameLong: ""
  orgNameShort: ""
  orgSupportEmail: ""
  alerts_site_default_language: ""
  skin_favicon: ""
  privacy_policy_url: ""
  occurrence_searchTitle: ""
  occurrence_searchUrl: ""
  regions_searchTitle: ""
  regions_searchUrl: ""
  speciesPages_searchTitle: ""
  speciesPages_searchUrl: ""
  collection_searchTitle: ""
  collection_searchUrl: ""
  google_apikey: ""
  biosecurity:
    biosecurity_more_info: ""
    biosecurity_query_url: ""
  species_list_server: ""
  csv:
    biosecurity_csv_local_enabled: ""
    biosecurity_csv_s3_enabled: ""
  s3:
    grails_plugin_awssdk_region: ""
    grails_plugin_awssdk_s3_bucket: ""
    grails_plugin_awssdk_s3_profile: ""
  cognito:
    oidc:
      alerts_client_id: ""
      alerts_client_secret: ""
      discoveryUri: ""
      logoutUrl: ""
      alaUseridClaim: ""
      logoutAction: ""
      scope: ""
    core:
      roleAttribute: ""
      affiliation_survey_enabled: ""
      auth_cookie_name: ""
    cookie:
      auth_cookie_enabled: ""
      auth_cookie_domain: ""
    jwt:
      rolesFromAccessToken: ""
      userIdClaim: ""
      roleClaims: ""
      discoveryUri: ""

  apikey:
    apikey_check_enabled: ""
    apikey_auth_url: ""
    apikey_check_url: ""
    apikey_userdetails_url: ""
  webservice:
    webservice_jwt: ""
    alerts_webservice_jwt_scopes: ""
    alerts_client_id: ""
    alerts_client_secret: ""
  usersync_batchsize: ""
  userdetails:
    userdetails_url: ""
    userdetails_web_url: ""
    userdetails_api_url: ""
  openapi:
    openapi_oauth_url: ""
    terms_url: ""
    support_email: ""
  podEnvironment: "production"
  xmx: ""
  xms: ""
